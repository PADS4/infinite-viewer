{"version":3,"file":"infinite-viewer.js","sources":["../src/consts.ts","../src/utils.ts","../src/ScrollBar.ts","../src/InfiniteViewer.tsx","../src/index.umd.ts"],"sourcesContent":["import styled from \"css-styled\";\nimport { InfiniteViewerOptions } from \"./types\";\nimport getAgent from \"@egjs/agent\";\nimport { prefixCSS } from \"framework-utils\";\n\nexport const agent = getAgent();\nexport const IS_SAFARI = agent.browser.name === \"safari\";\n\nexport const PREFIX = \"infinite-viewer-\";\n\nexport const WRAPPER_CLASS_NAME = `${PREFIX}wrapper`;\nexport const SCROLL_AREA_CLASS_NAME = `${PREFIX}scroll-area`;\n\nexport const SCROLL_BAR_CLASS_NAME = `${PREFIX}scroll-bar`;\nexport const HORIZONTAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}horizontal-scroll-bar`;\nexport const VERTICAL_SCROLL_BAR_CLASS_NAME = `${PREFIX}vertical-scroll-bar`;\nexport const SCROLL_THUMB_CLASS_NAME = `${PREFIX}scroll-thumb`;\n\nexport const injector = styled(prefixCSS(PREFIX, `\n{\n    position: relative;\n}\n.wrapper {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    top: 0;\n    left: 0;\n    will-change: scroll-position;\n}\n.wrapper::-webkit-scrollbar {\n    display: none;\n}\n.scroll-area {\n    position:absolute;\n    top:0;\n    left:0;\n    transform-origin: 0 0;\n}\n.scroll-bar {\n    position:absolute;\n    width: 10px;\n    height: 10px;\n    box-sizing: border-box;\n    right: 0;\n    bottom: 0;\n    overflow: hidden;\n}\n.horizontal-scroll-bar {\n    width: 100%;\n    height: 14px;\n}\n.vertical-scroll-bar {\n    height: 100%;\n    width: 14px;\n}\n.scroll-thumb {\n    position:relative;\n    opacity: 0.7;\n    background: #333;\n    border-radius: 3px;\n    left: 0px;\n    top: 0px;\n    z-index: 10;\n    width: 6px;\n    height: 6px;\n    transition: all ease 0.2s;\n}\n.horizontal-scroll-bar .scroll-thumb {\n    margin: 4px 0px;\n    transition-property: margin, height, border-radius;\n}\n.vertical-scroll-bar .scroll-thumb {\n    margin: 0px 4px;\n    transition-property: margin, width, border-radius;\n}\n.horizontal-scroll-bar:hover .scroll-thumb {\n    height: 10px;\n    margin: 2px 0px;\n    border-radius: 5px;\n}\n.vertical-scroll-bar:hover .scroll-thumb {\n    width: 10px;\n    margin: 0px 2px;\n    border-radius: 5px;\n}\n`));\n\nexport const DEFAULT_OPTIONS = {\n    margin: 500,\n    threshold: 100,\n    zoom: 1,\n    rangeX: [-Infinity, Infinity],\n    rangeY: [-Infinity, Infinity],\n    wrapperElement: null,\n    scrollAreaElement: null,\n    horizontalScrollElement: null,\n    verticalScrollElement: null,\n    usePinch: false,\n    pinchThreshold: 30,\n    cspNonce: \"\",\n    wheelScale: 0.01,\n    displayHorizontalScroll: true,\n    displayVerticalScroll: true,\n};\n/**\n * @memberof InfiniteViewer\n */\nexport const CLASS_NAME = injector.className;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const PROPERTIES = [\n    \"margin\",\n    \"threshold\",\n    \"zoom\",\n    \"rangeX\",\n    \"rangeY\",\n    \"usePinch\",\n    \"pinchThreshold\",\n    \"wheelScale\",\n    \"displayVerticalScroll\",\n    \"displayHorizontalScroll\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    ...PROPERTIES,\n    \"cspNonce\",\n    \"wrapperElement\",\n    \"scrollAreaElement\",\n    \"verticalScrollElement\",\n    \"horizontalScrollElement\",\n] as const;\nexport const OPTION_TYPES: { [key in keyof InfiniteViewerOptions]: any } = {\n    margin: Number,\n    threshold: Number,\n    zoom: Number,\n    wrapperElement: Object,\n    scrollAreaElement: Object,\n    verticalScrollElement: Object,\n    horizontalScrollElement: Object,\n    rangeX: Array,\n    rangeY: Array,\n    pinchThreshold: Number,\n    usePinch: Boolean,\n    cspNonce: String,\n    wheelScale: Number,\n    displayHorizontalScroll: Boolean,\n    displayVerticalScroll: Boolean,\n};\n\n/**\n * @memberof InfiniteViewer\n */\nexport const EVENTS = [\n    \"scroll\",\n    \"abortPinch\",\n    \"dragStart\",\n    \"dragEnd\",\n    \"pinch\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const METHODS = [\n    \"getScrollLeft\",\n    \"getScrollTop\",\n    \"getScrollWidth\",\n    \"getScrollHeight\",\n    \"scrollTo\",\n    \"scrollBy\",\n    \"scrollCenter\",\n    \"getContainer\",\n    \"getViewport\",\n] as const;\n\nexport const TINY_NUM = 0.000001;\n","import { OnDrag } from \"gesto\";\nimport { TINY_NUM } from \"./consts\";\n\nexport function measureSpeed(e: OnDrag) {\n    const { deltaX, deltaY, datas } = e;\n    const time = Date.now();\n    const prevSpeed = datas.speed;\n\n    if (!prevSpeed) {\n        datas.speed = [0, 0];\n        datas.time = time;\n        return;\n    }\n    const dt = time - datas.time;\n    datas.speed = [prevSpeed[0] / 2 + deltaX / dt, prevSpeed[1] / 2 + deltaY / dt];\n}\n\nexport function getDuration(speed: number[], a: number) {\n    const normalSpeed = Math.sqrt(speed[0] * speed[0] + speed[1] * speed[1]);\n\n    return Math.abs(normalSpeed / a);\n}\nexport function getDestPos(speed: number[], a: number) {\n    const duration = getDuration(speed, a);\n\n    return [\n        speed[0] / 2 * duration,\n        speed[1] / 2 * duration,\n    ];\n}\nexport function minmax(value: number, min: number, max: number) {\n    return Math.min(max, Math.max(min, value));\n}\n\nexport function abs(v: number) {\n    return Math.abs(v);\n}\n\nexport function getRange(\n    pos: number,\n    margin: number,\n    range: number[],\n    threshold: number,\n    isReal: boolean,\n) {\n    const min = isReal || isFinite(range[0])\n        ? range[0]\n        : Math.min(-1, Math.floor(pos / margin)) * margin - threshold;\n    const max = isReal || isFinite(range[1])\n        ? range[1]\n        : Math.max(1, Math.ceil(pos / margin)) * margin + threshold;\n\n    return [min, max];\n}\n\nexport function throttle(value: number) {\n    return Math.round(value / TINY_NUM) * TINY_NUM;\n}\n","import Gesto from \"gesto\";\nimport {\n    SCROLL_BAR_CLASS_NAME, SCROLL_THUMB_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME\n} from \"./consts\";\nimport { addClass, removeEvent, addEvent } from \"@daybrush/utils\";\nimport Component from \"@egjs/component\";\n\nexport default class ScrollBar extends Component {\n    public isAppend: boolean = false;\n    public thumbElement!: HTMLElement;\n    private gesto!: Gesto;\n    private pos: number = 0;\n    private size: number = 0;\n    private scrollSize: number = 0;\n    private isHorizontal = false;\n    constructor(\n        private type: \"horizontal\" | \"vertical\",\n        public barElement?: HTMLElement,\n    ) {\n        super();\n        const isHorizontal = type === \"horizontal\";\n\n        this.isHorizontal = isHorizontal;\n        if (!barElement) {\n            barElement = document.createElement(\"div\");\n            const thumbElement = document.createElement(\"div\");\n\n            addClass(\n                barElement,\n                isHorizontal ? HORIZONTAL_SCROLL_BAR_CLASS_NAME\n                    : VERTICAL_SCROLL_BAR_CLASS_NAME,\n            );\n            addClass(barElement, SCROLL_BAR_CLASS_NAME);\n            addClass(thumbElement, SCROLL_THUMB_CLASS_NAME);\n\n            barElement.insertBefore(thumbElement, null);\n\n            this.barElement = barElement;\n            this.thumbElement = thumbElement;\n            this.isAppend = true;\n        } else {\n            this.thumbElement = barElement.querySelector(`.${SCROLL_THUMB_CLASS_NAME}`);\n        }\n        this.gesto = new Gesto(this.barElement, {\n            container: window,\n        }).on(\"dragStart\", e => {\n            const target = e.inputEvent.target;\n            const datas = e.datas;\n            const isThumb = this.thumbElement === target;\n\n            if (!isThumb) {\n                setTimeout(() => {\n                    requestAnimationFrame(() => {\n                        const thumbRect = this.thumbElement.getBoundingClientRect();\n                        const pos1 = thumbRect[isHorizontal ? \"left\" : \"top\"];\n                        const thumbSize = thumbRect[isHorizontal ? \"width\" : \"height\"];\n                        const pos2 = pos1 + thumbSize;\n                        const clientPos = e[isHorizontal ? \"clientX\" : \"clientY\"];\n\n                        if (pos1 <= clientPos && clientPos <= pos2) {\n                            return;\n                        }\n                        const size = this.size;\n                        const delta = size * size / this.scrollSize;\n\n                        this.scrollBy(pos1 < clientPos ? delta : -delta);\n                    });\n                }, 100);\n\n            }\n            datas.isThumb = isThumb;\n            e.inputEvent.stopPropagation();\n            e.inputEvent.preventDefault();\n        }).on(\"drag\", e => {\n            if (!e.datas.isThumb) {\n                return;\n            }\n            this.scrollBy(this.isHorizontal ? e.deltaX : e.deltaY);\n        });\n        addEvent(this.barElement, \"wheel\", this.onWheel, {\n            passive: false,\n        });\n    }\n    public scrollBy(delta: number) {\n        const ratio = delta / this.size;\n\n        this.trigger(\"scroll\", {\n            delta: this.scrollSize * ratio,\n        });\n    }\n    public render(isDisplay: boolean, pos: number, size: number, scrollSize: number) {\n        this.pos = pos;\n        this.size = size;\n        this.scrollSize = scrollSize;\n\n        const display = isDisplay && (scrollSize > size) ? \"block\" : \"none\";\n        const [dirName1, sizeName] = this.isHorizontal ? [\"X\", \"width\"] : [\"Y\", \"height\"];\n\n        this.barElement.style.cssText = `display: ${display};`;\n        this.thumbElement.style.cssText\n            += `${sizeName}: ${size * size / scrollSize}px;`\n            + `transform: translate${dirName1}(${pos / scrollSize * size}px)`;\n    }\n    public destroy() {\n        removeEvent(this.barElement, \"wheel\", this.onWheel);\n        this.gesto.off();\n        this.off();\n    }\n    private onWheel = (e: WheelEvent) => {\n        const delta = this.isHorizontal ? e.deltaX : e.deltaY;\n\n        if (delta) {\n            e.preventDefault();\n        }\n        this.trigger(\"scroll\", {\n            delta,\n        });\n    }\n}\n","import Component from \"@egjs/component\";\nimport Gesto from \"gesto\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport { camelize, IObject, addEvent, removeEvent, addClass } from \"@daybrush/utils\";\nimport { InfiniteViewerOptions, InfiniteViewerProperties, InfiniteViewerEvents } from \"./types\";\nimport {\n    PROPERTIES, injector, CLASS_NAME, TINY_NUM,\n    IS_SAFARI, DEFAULT_OPTIONS,\n    WRAPPER_CLASS_NAME, SCROLL_AREA_CLASS_NAME,\n    HORIZONTAL_SCROLL_BAR_CLASS_NAME, VERTICAL_SCROLL_BAR_CLASS_NAME\n} from \"./consts\";\nimport { measureSpeed, getDuration, getDestPos, abs, getRange } from \"./utils\";\nimport ScrollBar from \"./ScrollBar\";\n\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function (value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function (value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\n/**\n * @sort 1\n */\nclass InfiniteViewer extends Component {\n    public options: InfiniteViewerOptions;\n    private injectResult!: InjectResult;\n    private wrapperElement!: HTMLElement;\n    private scrollAreaElement!: HTMLElement;\n    private horizontalScrollbar: ScrollBar;\n    private verticalScrollbar: ScrollBar;\n    private gesto!: Gesto;\n    private offsetX = 0;\n    private offsetY = 0;\n    private containerWidth = 0;\n    private containerHeight = 0;\n    private viewportWidth = 0;\n    private viewportHeight = 0;\n    private scrollLeft = 0;\n    private scrollTop = 0;\n    private timer = 0;\n    private dragFlag = false;\n    private tempScale = 1;\n    /**\n     * @sort 1\n     */\n    constructor(\n        private containerElement: HTMLElement,\n        private viewportElement: HTMLElement,\n        options: Partial<InfiniteViewerOptions> = {},\n    ) {\n        super();\n        this.options = {\n            ...DEFAULT_OPTIONS,\n            ...options,\n        };\n        this.init();\n    }\n    /**\n     * Get Container Element\n     */\n    public getContainer(): HTMLElement {\n        return this.containerElement;\n    }\n    /**\n     * Get Viewport Element\n     */\n    public getViewport(): HTMLElement {\n        return this.viewportElement;\n    }\n    /**\n     * Get Wrapper Element\n     */\n    public getWrapper(): HTMLElement {\n        return this.wrapperElement;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.gesto.unset();\n        this.verticalScrollbar.destroy();\n        this.horizontalScrollbar.destroy();\n        this.injectResult.destroy();\n        const containerElement = this.containerElement;\n\n        removeEvent(window, \"resize\", this.resize);\n        removeEvent(this.wrapperElement, \"scroll\", this.onScroll);\n        removeEvent(containerElement, \"wheel\", this.onWheel);\n        removeEvent(containerElement, \"tgesturestart\", this.onGestureStart);\n        removeEvent(containerElement, \"gesturechange\", this.onGestureChange);\n\n        this.gesto = null;\n        this.injectResult = null;\n        this.containerElement = null;\n        this.viewportElement = null;\n        this.options = null;\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     * @param - Get absolute top position\n     */\n    public getScrollTop(isAbsolute?: boolean) {\n        return this.scrollTop / this.zoom + this.offsetY\n            + (isAbsolute ? abs(this.getRangeY()[0]) : 0);\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     * @param - Get absolute left position\n     */\n    public getScrollLeft(isAbsolute?: boolean) {\n        return this.scrollLeft / this.zoom + this.offsetX\n            + (isAbsolute ? abs(this.getRangeX()[0]) : 0);\n    }\n    /**\n     * Gets measurement of the width of an element's content with overflow\n     */\n    public getScrollWidth(isZoom?: boolean) {\n        const range = this.getRangeX(isZoom);\n\n        return this.containerWidth + abs(range[0]) + abs(range[1]);\n    }\n    /**\n     * Gets measurement of the height of an element's content with overflow\n     */\n    public getScrollHeight(isZoom?: boolean) {\n        const range = this.getRangeY(isZoom);\n\n        return this.containerHeight + abs(range[0]) + abs(range[1]);\n    }\n\n    /**\n     * Scroll the element to the center\n     */\n    public scrollCenter() {\n        this.resize();\n\n        const zoom = this.zoom;\n        const left = -(this.containerWidth - this.viewportWidth * zoom) / 2;\n        const top = -(this.containerHeight - this.viewportHeight * zoom) / 2;\n\n        return this.scrollTo(left, top);\n    }\n    /**\n     * Update Viewer Sizes\n     * @method\n     */\n    public resize = () => {\n        const {\n            offsetWidth: containerWidth,\n            offsetHeight: containerHeight,\n        } = this.containerElement;\n        const {\n            offsetWidth: viewportWidth,\n            offsetHeight: viewportHeight,\n        } = this.viewportElement;\n\n        this.containerWidth = containerWidth;\n        this.containerHeight = containerHeight;\n        this.viewportWidth = viewportWidth;\n        this.viewportHeight = viewportHeight;\n    }\n    /**\n     * Scrolls the container by the given amount.\n     */\n    public scrollBy(deltaX: number, deltaY: number) {\n        return this.scrollTo(this.getScrollLeft() + deltaX, this.getScrollTop() + deltaY);\n    }\n    /**\n     * Scrolls the container to set of coordinates.\n     * @param scrollLeft\n     * @param scrollTop\n     */\n    public scrollTo(x: number, y: number) {\n        const {\n            zoom = DEFAULT_OPTIONS.zoom,\n            margin = DEFAULT_OPTIONS.margin,\n            threshold = DEFAULT_OPTIONS.threshold,\n            scrollLeft: prevScrollLeft,\n            scrollTop: prevScrollTop,\n        } = this;\n\n        const [minX, maxX] = this.getRangeX(true, true);\n        const [minY, maxY] = this.getRangeY(true, true);\n\n        let scrollLeft = prevScrollLeft;\n        let scrollTop = prevScrollTop;\n\n        const scrollAreaWidth = this.getScrollAreaWidth();\n        const scrollAreaHeight = this.getScrollAreaHeight();\n        const zoomX = x * zoom;\n        const zoomY = y * zoom;\n\n        if (zoomX - threshold <= minX) {\n            const minThreshold = Math.max(0, zoomX - minX);\n\n            scrollLeft = minThreshold;\n            x = (minX + minThreshold) / zoom;\n        } else if (zoomX + threshold >= maxX) {\n            const maxThreshold = Math.max(0, maxX - zoomX);\n\n            scrollLeft = scrollAreaWidth - maxThreshold;\n            x = (maxX - maxThreshold) / zoom;\n        } else if (scrollLeft < threshold) {\n            scrollLeft += margin;\n        } else if (scrollLeft > scrollAreaWidth - threshold) {\n            scrollLeft -= margin;\n        }\n\n        if (zoomY - threshold <= minY) {\n            const minThreshold = Math.max(0, zoomY - minY);\n\n            scrollTop = minThreshold;\n            y = (minY + minThreshold) / zoom;\n        } else if (zoomY + threshold >= maxY) {\n            const maxThreshold = Math.max(0, maxY - zoomY);\n\n            scrollTop = scrollAreaHeight - maxThreshold;\n            y = (maxY - maxThreshold) / zoom;\n        } else if (scrollTop < threshold) {\n            scrollTop += margin;\n        } else if (scrollTop > scrollAreaHeight - threshold) {\n            scrollTop -= margin;\n        }\n        scrollLeft = Math.round(scrollLeft);\n        scrollTop = Math.round(scrollTop);\n\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n\n        this.offsetX = x - scrollLeft / zoom;\n        this.offsetY = y - scrollTop / zoom;\n\n        this.render();\n        const nextX = this.getScrollLeft();\n        const nextY = this.getScrollTop();\n\n        /**\n         * The `scroll` event fires when the document view or an element has been scrolled.\n         * @memberof InfiniteViewer\n         * @event scroll\n         * @param {InfiniteViewer.OnScroll} - Parameters for the scroll event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"scroll\", () => {\n         *   console.log(viewer.getScrollLeft(), viewer.getScrollTop());\n         * });\n         */\n        this.trigger(\"scroll\", {\n            scrollLeft: nextX,\n            scrollTop: nextY,\n        });\n        if (prevScrollLeft !== Math.round(scrollLeft) || prevScrollTop !== scrollTop) {\n            this.move(scrollLeft, scrollTop);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Set viewer zoom\n     */\n    public setZoom(zoom: number) {\n        const {\n            containerWidth,\n            containerHeight,\n            zoom: prevZoom,\n        } = this;\n\n        const scrollLeft = this.getScrollLeft();\n        const scrollTop = this.getScrollTop();\n\n        this.options.zoom = zoom;\n\n        const nextScrollLeft = this.getScrollLeft();\n        const nextScrollTop = this.getScrollTop();\n\n        const centerX = scrollLeft + containerWidth / prevZoom / 2;\n        const centerY = scrollTop + containerHeight / prevZoom / 2;\n\n        const nextCenterX = nextScrollLeft + containerWidth / zoom / 2;\n        const nextCenterY = nextScrollTop + containerHeight / zoom / 2;\n\n        this.scrollBy(centerX - nextCenterX, centerY - nextCenterY);\n        this.render();\n    }\n    /**\n     * get x ranges\n     */\n    public getRangeX(isZoom?: boolean, isReal?: boolean) {\n        const {\n            rangeX = DEFAULT_OPTIONS.rangeX,\n            margin = DEFAULT_OPTIONS.margin,\n            zoom = DEFAULT_OPTIONS.zoom,\n            threshold,\n        } = this;\n\n        const range = getRange(\n            this.getScrollLeft(),\n            margin,\n            rangeX,\n            threshold,\n            isReal,\n        );\n\n        if (!isZoom) {\n            return range;\n        }\n        return [\n            range[0] * zoom,\n            Math.max(this.viewportWidth * zoom - this.containerWidth, range[1] * zoom),\n        ];\n    }\n    /**\n     * get y ranges\n     */\n    public getRangeY(isZoom?: boolean, isReal?: boolean) {\n        const {\n            rangeY = DEFAULT_OPTIONS.rangeY,\n            margin = DEFAULT_OPTIONS.margin,\n            zoom = DEFAULT_OPTIONS.zoom,\n            threshold,\n        } = this;\n\n        const range = getRange(\n            this.getScrollTop(),\n            margin,\n            rangeY,\n            threshold,\n            isReal,\n        );\n        if (!isZoom) {\n            return range;\n        }\n        return [\n            range[0] * zoom,\n            Math.max(this.viewportHeight * zoom - this.containerHeight, range[1] * zoom),\n        ];\n    }\n    private init() {\n        // infinite-viewer(container)\n        // viewport\n        // children\n        const containerElement = this.containerElement;\n        const options = this.options;\n        addClass(containerElement, CLASS_NAME);\n\n        // vanilla\n        let wrapperElement = options.wrapperElement\n            || containerElement.querySelector(`.${WRAPPER_CLASS_NAME}`);\n        let scrollAreaElement = options.scrollAreaElement\n            || containerElement.querySelector(`.${SCROLL_AREA_CLASS_NAME}`);\n        const horizontalScrollElement = options.horizontalScrollElement\n            || containerElement.querySelector(`.${HORIZONTAL_SCROLL_BAR_CLASS_NAME}`);\n        const verticalScrollElement = options.verticalScrollElement\n            || containerElement.querySelector(`.${VERTICAL_SCROLL_BAR_CLASS_NAME}`);\n\n        if (wrapperElement) {\n            this.wrapperElement = wrapperElement;\n        } else {\n            wrapperElement = document.createElement(\"div\");\n\n            addClass(wrapperElement, WRAPPER_CLASS_NAME);\n\n            wrapperElement.insertBefore(this.viewportElement, null);\n            containerElement.insertBefore(wrapperElement, null);\n\n            this.wrapperElement = wrapperElement;\n        }\n        if (scrollAreaElement) {\n            this.scrollAreaElement = scrollAreaElement;\n        } else {\n            scrollAreaElement = document.createElement(\"div\");\n\n            addClass(scrollAreaElement, SCROLL_AREA_CLASS_NAME);\n            wrapperElement.insertBefore(scrollAreaElement, wrapperElement.firstChild);\n\n            this.scrollAreaElement = scrollAreaElement;\n        }\n        this.horizontalScrollbar = new ScrollBar(\"horizontal\", horizontalScrollElement);\n        this.verticalScrollbar = new ScrollBar(\"vertical\", verticalScrollElement);\n\n        this.horizontalScrollbar.on(\"scroll\", e => {\n            this.scrollBy(e.delta / this.zoom, 0);\n        });\n\n        this.verticalScrollbar.on(\"scroll\", e => {\n            this.scrollBy(0, e.delta / this.zoom);\n        });\n\n        if (this.horizontalScrollbar.isAppend) {\n            containerElement.insertBefore(this.horizontalScrollbar.barElement, null);\n        }\n        if (this.verticalScrollbar.isAppend) {\n            containerElement.insertBefore(this.verticalScrollbar.barElement, null);\n        }\n        addClass(containerElement, CLASS_NAME);\n        this.injectResult = injector.inject(containerElement, {\n            nonce: this.options.cspNonce,\n        });\n        /**\n         * the `dragStart` event fires when `touchstart` does occur.\n         * @memberof InfiniteViewer\n         * @event dragStart\n         * @param {InfiniteViewer.OnDragStart} - Parameters for the `dragStart` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragStart\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `drag` event fires when `touch` does occur.\n         * @memberof InfiniteViewer\n         * @event drag\n         * @param {InfiniteViewer.OnDrag} - Parameters for the `drag` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"drag\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `dragEnd` event fires when `touchend` does occur.\n         * @memberof InfiniteViewer\n         * @event dragEnd\n         * @param {InfiniteViewer.OnDragEnd} - Parameters for the `dragEnd` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragEnd\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `abortPinch` event fires when `pinch` event does not occur by dragging a certain area.\n         * @memberof InfiniteViewer\n         * @event abortPinch\n         * @param {InfiniteViewer.OnAbortPinch} - Parameters for the abortPinch event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"abortPinch\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `pinch` event fires when two points pinch the viewer\n         * @memberof InfiniteViewer\n         * @event pinch\n         * @param {InfiniteViewer.OnPinch} - Parameters for the `pinch` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"pinch\", e => {\n         *   console.log(e.zoom, e.inputEvent);\n         * });\n         */\n        this.gesto = new Gesto(containerElement, {\n            container: document.body,\n            events: [\"touch\"],\n        }).on(\"dragStart\", ({ inputEvent, datas }) => {\n            inputEvent.preventDefault();\n            this.pauseAnimation();\n            this.dragFlag = false;\n\n            datas.startEvent = inputEvent;\n            return this.trigger(\"dragStart\", {\n                inputEvent,\n            });\n        }).on(\"drag\", e => {\n            if (!this.options.usePinch || e.isPinch) {\n                this.trigger(\"drag\", {\n                    inputEvent: e.inputEvent,\n                });\n                measureSpeed(e);\n                const zoom = this.zoom;\n                this.scrollBy(-e.deltaX / zoom, -e.deltaY / zoom);\n            } else if (!this.dragFlag && e.movement > options.pinchThreshold) {\n                this.dragFlag = true;\n\n                this.trigger(\"abortPinch\", {\n                    inputEvent: e.datas.startEvent || e.inputEvent,\n                });\n            }\n        }).on(\"dragEnd\", e => {\n            this.trigger(\"dragEnd\", {\n                isDrag: e.isDrag,\n                isDouble: e.isDouble,\n                inputEvent: e.inputEvent,\n            });\n            this.startAnimation(e.datas.speed);\n        }).on(\"pinchStart\", ({ inputEvent, datas }) => {\n            inputEvent.preventDefault();\n            this.pauseAnimation();\n            datas.startZoom = this.zoom;\n        }).on(\"pinch\", e => {\n            // e.distance;\n            // e.scale\n            this.trigger(\"pinch\", {\n                rotation: e.rotation,\n                distance: e.distance,\n                scale: e.scale,\n                zoom: e.datas.startZoom * e.scale,\n                inputEvent: e.inputEvent,\n            });\n        });\n        const margin = this.margin;\n\n        addEvent(wrapperElement, \"scroll\", this.onScroll);\n        addEvent(window, \"resize\", this.resize);\n        addEvent(containerElement, \"wheel\", this.onWheel, {\n            passive: false,\n        });\n\n        addEvent(containerElement, \"gesturestart\", this.onGestureStart, {\n            passive: false,\n        });\n        addEvent(containerElement, \"gesturechange\", this.onGestureChange, {\n            passive: false,\n        });\n        this.resize();\n        this.render();\n        this.scrollTo(0, 0);\n    }\n    private render() {\n        const {\n            offsetX,\n            offsetY,\n            zoom = DEFAULT_OPTIONS.zoom,\n        } = this;\n        const nextOffsetX = -offsetX * zoom;\n        const nextOffsetY = -offsetY * zoom;\n\n        this.scrollAreaElement.style.cssText\n            = `width:calc(100% + ${this.getScrollAreaWidth()}px);`\n            + `height:calc(100% + ${this.getScrollAreaHeight()}px);`;\n        this.viewportElement.style.cssText += `transform-origin: 0 0;transform:translate(${nextOffsetX}px, ${nextOffsetY}px) scale(${zoom});`;\n        this.renderScroll();\n    }\n    private renderScroll() {\n        const {\n            containerWidth,\n            containerHeight,\n            zoom,\n        } = this;\n        const scrollLeft = this.getScrollLeft(true) * zoom;\n        const scrollTop = this.getScrollTop(true) * zoom;\n        const scrollWidth = this.getScrollWidth(true);\n        const scrollHeight = this.getScrollHeight(true);\n\n        this.horizontalScrollbar.render(\n            this.displayHorizontalScroll,\n            scrollLeft,\n            containerWidth,\n            scrollWidth,\n        );\n        this.verticalScrollbar.render(\n            this.displayVerticalScroll,\n            scrollTop,\n            containerHeight,\n            scrollHeight,\n        );\n    }\n    private move(scrollLeft: number, scrollTop: number) {\n        const wrapperElement = this.wrapperElement;\n\n        wrapperElement.scrollLeft = scrollLeft;\n        wrapperElement.scrollTop = scrollTop;\n    }\n    private onScroll = () => {\n        const { scrollLeft, scrollTop } = this.wrapperElement;\n        const {\n            zoom = DEFAULT_OPTIONS.zoom,\n        } = this;\n        const deltaX = scrollLeft - this.scrollLeft;\n        const deltaY = scrollTop - this.scrollTop;\n        const viewerScrollLeft = this.getScrollLeft();\n        const viewerScrollTop = this.getScrollTop();\n\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.scrollTo(\n            viewerScrollLeft + deltaX / zoom,\n            viewerScrollTop + deltaY / zoom,\n        );\n    }\n    private onWheel = (e: WheelEvent) => {\n        const ctrlKey = e.ctrlKey;\n\n        if (ctrlKey) {\n            const distance = -e.deltaY;\n            const scale = Math.max(1 + distance * (this.options.wheelScale || 0.01), TINY_NUM);\n\n            this.trigger(\"pinch\", {\n                distance,\n                scale,\n                rotation: 0,\n                zoom: this.zoom * scale,\n                inputEvent: e,\n            });\n        } else if (!IS_SAFARI) {\n            return;\n        } else {\n            const zoom = this.zoom;\n            this.scrollBy(e.deltaX / zoom, e.deltaY / zoom);\n        }\n        e.preventDefault();\n    }\n    private onGestureStart = (e: any) => {\n        this.tempScale = this.zoom;\n        e.preventDefault();\n    }\n    private onGestureChange = (e: any) => {\n        e.preventDefault();\n        if (this.gesto.isFlag() || !this.tempScale) {\n            this.tempScale = 0;\n            return;\n        }\n        const scale = e.scale;\n\n        this.trigger(\"pinch\", {\n            distance: 0,\n            scale,\n            rotation: e.rotation,\n            zoom: this.tempScale * scale,\n            inputEvent: e,\n        });\n    }\n    private startAnimation(speed: number[]) {\n        if (!speed || (!speed[0] && !speed[1])) {\n            return;\n        }\n        const a = -0.0006;\n        const easing = x => 1 - Math.pow(1 - x, 3);\n        const duration = getDuration(speed, a);\n        const destPos = getDestPos(speed, a);\n        const startTime = Date.now();\n        let prevTime = startTime;\n\n        const next = () => {\n            const now = Date.now();\n            let t = now - startTime;\n\n            if (duration < t) {\n                t = duration;\n            }\n            const ratio = easing(t / duration);\n            const prevRatio = easing((prevTime - startTime) / duration);\n\n            prevTime = now;\n\n            this.scrollBy(\n                -destPos[0] * (ratio - prevRatio),\n                -destPos[1] * (ratio - prevRatio),\n            );\n\n            if (t >= duration) {\n                return;\n            }\n            this.timer = requestAnimationFrame(next);\n        };\n        this.timer = requestAnimationFrame(next);\n    }\n    private pauseAnimation() {\n        cancelAnimationFrame(this.timer);\n    }\n    private getScrollAreaWidth() {\n        const [min, max] = this.getRangeX(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n    private getScrollAreaHeight() {\n        const [min, max] = this.getRangeY(true);\n        return min || max ? this.margin * 2 : 0;\n    }\n}\n\ninterface InfiniteViewer extends Component, InfiniteViewerProperties {\n    // tslint:disable-next-line: max-line-length\n    on<T extends keyof InfiniteViewerEvents>(eventName: T, handlerToAttach: (event: InfiniteViewerEvents[T]) => any): this;\n    on(eventName: string, handlerToAttach: (event: { [key: string]: any }) => any): this;\n    on(events: { [key: string]: (event: { [key: string]: any }) => any }): this;\n}\n\nexport default InfiniteViewer;\n","import InfiniteViewer, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (InfiniteViewer as any)[name] = modules[name];\n}\n\nexport default InfiniteViewer;\n"],"names":["agent","getAgent","IS_SAFARI","browser","name","PREFIX","WRAPPER_CLASS_NAME","SCROLL_AREA_CLASS_NAME","SCROLL_BAR_CLASS_NAME","HORIZONTAL_SCROLL_BAR_CLASS_NAME","VERTICAL_SCROLL_BAR_CLASS_NAME","SCROLL_THUMB_CLASS_NAME","injector","styled","prefixCSS","DEFAULT_OPTIONS","margin","threshold","zoom","rangeX","Infinity","rangeY","wrapperElement","scrollAreaElement","horizontalScrollElement","verticalScrollElement","usePinch","pinchThreshold","cspNonce","wheelScale","displayHorizontalScroll","displayVerticalScroll","CLASS_NAME","className","PROPERTIES","OPTIONS","__spreadArrays","OPTION_TYPES","Number","Object","Array","Boolean","String","EVENTS","METHODS","TINY_NUM","measureSpeed","e","deltaX","deltaY","datas","time","Date","now","prevSpeed","speed","dt","getDuration","a","normalSpeed","Math","sqrt","abs","getDestPos","duration","v","getRange","pos","range","isReal","min","isFinite","floor","max","ceil","__extends","type","barElement","_super","_this","delta","isHorizontal","preventDefault","trigger","document","createElement","thumbElement","addClass","insertBefore","isAppend","querySelector","gesto","Gesto","container","window","on","target","inputEvent","isThumb","setTimeout","requestAnimationFrame","thumbRect","getBoundingClientRect","pos1","thumbSize","pos2","clientPos","size","scrollSize","scrollBy","stopPropagation","addEvent","onWheel","passive","ratio","isDisplay","display","_a","dirName1","sizeName","style","cssText","removeEvent","off","Component","containerElement","viewportElement","options","containerWidth","containerHeight","_b","viewportWidth","viewportHeight","scrollLeft","scrollTop","viewerScrollLeft","getScrollLeft","viewerScrollTop","getScrollTop","scrollTo","ctrlKey","distance","scale","rotation","tempScale","isFlag","init","unset","verticalScrollbar","destroy","horizontalScrollbar","injectResult","resize","onScroll","onGestureStart","onGestureChange","isAbsolute","offsetY","getRangeY","offsetX","getRangeX","isZoom","left","top","x","y","_c","_d","prevScrollLeft","prevScrollTop","_e","minX","maxX","_f","minY","maxY","scrollAreaWidth","getScrollAreaWidth","scrollAreaHeight","getScrollAreaHeight","zoomX","zoomY","minThreshold","maxThreshold","round","render","nextX","nextY","move","prevZoom","nextScrollLeft","nextScrollTop","centerX","centerY","nextCenterX","nextCenterY","firstChild","ScrollBar","inject","nonce","body","events","pauseAnimation","dragFlag","startEvent","isPinch","movement","isDrag","isDouble","startAnimation","startZoom","nextOffsetX","nextOffsetY","renderScroll","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","easing","pow","destPos","startTime","prevTime","next","t","prevRatio","timer","cancelAnimationFrame","InfiniteViewer","Properties","prototype","property","attributes","enumerable","configurable","get","setter","camelize","set","value","defineProperty","modules"],"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"}