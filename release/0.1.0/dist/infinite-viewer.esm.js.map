{"version":3,"file":"infinite-viewer.esm.js","sources":["../src/consts.ts","../src/utils.ts","../src/InfiniteViewer.tsx"],"sourcesContent":["import styled from \"css-styled\";\nimport { InfiniteViewerOptions } from \"./types\";\n\nexport const injector = styled(`\n{\n    position: relative;\n    display: block;\n    overflow: auto;\n}\n:host::-webkit-scrollbar {\n    display: none;\n}\n`);\n\n/**\n * @memberof InfiniteViewer\n */\nexport const CLASS_NAME = injector.className;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    \"margin\",\n    \"threshold\",\n    \"zoom\",\n    \"scrollArea\",\n    \"rangeX\",\n    \"rangeY\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const PROPERTIES = [\n    \"margin\",\n    \"threshold\",\n    \"zoom\",\n    \"rangeX\",\n    \"rangeY\",\n] as const;\n\nexport const OPTION_TYPES: { [key in keyof InfiniteViewerOptions]: any } = {\n    margin: Number,\n    threshold: Number,\n    zoom: Number,\n    scrollArea: Object,\n    rangeX: Array,\n    rangeY: Array,\n};\n\n/**\n * @memberof InfiniteViewer\n */\nexport const EVENTS = [\n    \"scroll\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const METHODS = [\n    \"getScrollLeft\",\n    \"getScrollTop\",\n    \"getScrollWidth\",\n    \"getScrollHeight\",\n    \"scrollTo\",\n    \"scrollBy\",\n] as const;\n","import { OnDrag } from \"@daybrush/drag\";\n\nexport function measureSpeed(e: OnDrag) {\n    const { deltaX, deltaY, datas } = e;\n    const time = Date.now();\n    const prevSpeed = datas.speed;\n\n    if (!prevSpeed) {\n        datas.speed = [0, 0];\n        datas.time = time;\n        return;\n    }\n    const dt = time - datas.time;\n    datas.speed = [prevSpeed[0] / 2 + deltaX / dt, prevSpeed[1] / 2 + deltaY / dt];\n}\n\nexport function getDuration(speed: number[], a: number) {\n    const normalSpeed = Math.sqrt(speed[0] * speed[0] + speed[1] * speed[1]);\n\n    return Math.abs(normalSpeed / a);\n}\nexport function getDestPos(speed: number[], a: number) {\n    const duration = getDuration(speed, a);\n\n    return [\n        speed[0] / 2 * duration,\n        speed[1] / 2 * duration,\n    ];\n}\n","import Component from \"@egjs/component\";\nimport Dragger from \"@daybrush/drag\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport {  camelize, IObject, addEvent, removeEvent, addClass } from \"@daybrush/utils\";\nimport { InfiniteViewerOptions, InfiniteViewerProperties, InfiniteViewerEvents } from \"./types\";\nimport { PROPERTIES, injector, CLASS_NAME } from \"./consts\";\nimport { measureSpeed, getDuration, getDestPos } from \"./utils\";\n\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function(value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function(value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\nclass InfiniteViewer extends Component {\n    public options: InfiniteViewerOptions;\n    private injectResult!: InjectResult;\n    private scrollArea!: HTMLElement;\n    private dragger!: Dragger;\n    private loopX = 0;\n    private loopY = 0;\n    private offsetX = 0;\n    private offsetY = 0;\n    private scrollLeft = 0;\n    private scrollTop = 0;\n    private timer = 0;\n    /**\n     *\n     */\n    constructor(\n        private container: HTMLElement,\n        private viewport: HTMLElement,\n        options: Partial<InfiniteViewerOptions> = {},\n    ) {\n        super();\n        this.options = {\n            margin: 500,\n            threshold: 100,\n            zoom: 1,\n            rangeX: [-Infinity, Infinity],\n            rangeY: [-Infinity, Infinity],\n            scrollArea: null,\n            ...options,\n        };\n        this.scrollArea = this.options.scrollArea;\n        this.init();\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.dragger.unset();\n        this.injectResult.destroy();\n        removeEvent(this.container, \"scroll\", this.onScroll);\n\n        this.dragger = null;\n        this.injectResult = null;\n        this.container = null;\n        this.options = null;\n    }\n    public getScrollTop(isAbsolute?: boolean) {\n        return this.scrollTop + (this.loopY - 1) * this.margin - this.offsetY\n            + (isAbsolute ? (-this.rangeY[0] + 1) * this.margin : 1);\n    }\n    public getScrollLeft(isAbsolute?: boolean) {\n        return this.scrollLeft + (this.loopX - 1) * this.margin - this.offsetX\n            + (isAbsolute ? (-this.rangeX[0] + 1) * this.margin : 0);\n    }\n    public getScrollWidth() {\n        return this.container.offsetWidth + this.margin * (this.rangeX[1] - this.rangeX[0] + 2);\n    }\n    public getScrollHeight() {\n        return this.container.offsetHeight + this.margin * (this.rangeY[1] - this.rangeY[0] + 2);\n    }\n    public scrollBy(deltaX: number, deltaY: number) {\n\n        this.scrollTo(this.getScrollLeft() + deltaX, this.getScrollTop() + deltaY);\n    }\n    public scrollTo(scrollLeft: number, scrollTop: number) {\n        const margin = this.margin;\n\n        this.loopX = Math.floor((margin + scrollLeft) / margin);\n        this.loopY = Math.floor((margin + scrollTop) / margin);\n        this.offsetX = (this.loopX - 1) * margin - scrollLeft + this.scrollLeft;\n        this.offsetY = (this.loopY - 1) * margin - scrollTop + this.scrollTop;\n\n        this.render();\n        this.trigger(\"scroll\");\n    }\n    private init() {\n        // infinite-viewer(container)\n        // viewport\n        // children\n        const container = this.container;\n\n        addClass(container, CLASS_NAME);\n\n        // vanilla\n        if (!this.scrollArea) {\n            this.scrollArea = document.createElement(\"div\");\n\n            const scrollArea = this.scrollArea;\n\n            scrollArea.style.cssText = `position:absolute;top:0;left:0;width:calc(100% + 400px);height:calc(100% + 400px);`;\n            container.insertBefore(scrollArea, container.firstChild);\n        }\n\n        this.injectResult = injector.inject(container);\n\n        this.dragger = new Dragger(container, {\n            container: document.body,\n            events: [\"touch\"],\n            dragstart: ({ inputEvent }) => {\n                inputEvent.preventDefault();\n                this.pauseAnimation();\n            },\n            drag: e => {\n                measureSpeed(e);\n                this.scrollBy(-e.deltaX, -e.deltaY);\n            },\n            dragend: e => {\n                this.startAnimation(e.datas.speed);\n            },\n        });\n        const margin = this.margin;\n\n        addEvent(container, \"scroll\", this.onScroll);\n        this.render();\n        this.move(margin, margin);\n    }\n    private render() {\n        const {\n            margin,\n            loopX,\n            loopY,\n            offsetX,\n            offsetY,\n            zoom,\n        } = this;\n        const size = `calc(100% + ${margin * 2}px)`;\n        const nextOffsetX = (1 - loopX) * margin + offsetX;\n        const nextOffsetY = (1 - loopY) * margin + offsetY;\n\n        this.scrollArea.style.cssText += `width:${size};height:${size};`;\n        this.viewport.style.transform = `translate(${nextOffsetX}px, ${nextOffsetY}px) scale(${zoom})`;\n    }\n    private move(scrollLeft: number, scrollTop: number) {\n        const container = this.container;\n\n        container.scrollLeft = scrollLeft;\n        container.scrollTop = scrollTop;\n    }\n    private onScroll = () => {\n        const container = this.container;\n        const { scrollLeft, scrollTop } = container;\n        const {\n            margin,\n            threshold,\n            loopX,\n            loopY,\n            rangeX,\n            rangeY,\n        } = this;\n        const endThreshold = margin * 2 - threshold;\n        let nextLoopX = loopX;\n        let nextLoopY = loopY;\n\n        let nextScrollLeft = scrollLeft;\n        let nextScrollTop = scrollTop;\n\n        if (scrollLeft < threshold) {\n            if (nextLoopX > rangeX[0]) {\n                nextScrollLeft = scrollLeft + margin;\n                --nextLoopX;\n            }\n        } else if (scrollLeft > endThreshold) {\n            if (nextLoopX < rangeX[1]) {\n                nextScrollLeft = scrollLeft - margin;\n                ++nextLoopX;\n            }\n        }\n        if (scrollTop < threshold) {\n            if (nextLoopY > rangeY[0]) {\n                nextScrollTop = scrollTop + margin;\n                --nextLoopY;\n            }\n        } else if (scrollTop > endThreshold) {\n            if (nextLoopY > rangeY[1]) {\n                nextScrollTop = scrollTop - margin;\n                ++nextLoopY;\n            }\n        }\n        const isChangeScroll = this.scrollLeft !== nextScrollLeft || this.scrollTop !== nextScrollTop;\n        const isChangeLoop = loopX !== nextLoopX || loopY !== nextLoopY;\n        this.scrollLeft = nextScrollLeft;\n        this.scrollTop = nextScrollTop;\n        this.loopX = nextLoopX;\n        this.loopY = nextLoopY;\n\n        this.render();\n\n        if (isChangeLoop || isChangeScroll) {\n            this.trigger(\"scroll\");\n        }\n\n        if (isChangeScroll) {\n            this.move(nextScrollLeft, nextScrollTop);\n        }\n    }\n    private startAnimation(speed: number[]) {\n        if (!speed || (!speed[0] && !speed[1])) {\n            return;\n        }\n        const a = -0.0006;\n        const easing = x => 1 - Math.pow(1 - x, 3);\n        const duration = getDuration(speed, a);\n        const destPos = getDestPos(speed, a);\n        const startTime = Date.now();\n        let prevTime = startTime;\n\n        const next = () => {\n            const now = Date.now();\n            let t = now - startTime;\n\n            if (duration < t) {\n                t = duration;\n            }\n            const ratio = easing(t / duration);\n            const prevRatio = easing((prevTime - startTime) / duration);\n\n            prevTime = now;\n\n            this.scrollBy(\n                -destPos[0] * (ratio - prevRatio),\n                -destPos[1] * (ratio - prevRatio),\n            );\n\n            if (t >= duration) {\n                return;\n            }\n            this.timer = requestAnimationFrame(next);\n        };\n        this.timer = requestAnimationFrame(next);\n    }\n    private pauseAnimation() {\n        cancelAnimationFrame(this.timer);\n    }\n}\n\ninterface InfiniteViewer extends Component, InfiniteViewerProperties {\n    // tslint:disable-next-line: max-line-length\n    on<T extends keyof InfiniteViewerEvents>(eventName: T, handlerToAttach: (event: InfiniteViewerEvents[T]) => any): this;\n    on(eventName: string, handlerToAttach: (event: { [key: string]: any }) => any): this;\n    on(events: { [key: string]: (event: { [key: string]: any }) => any }): this;\n}\n\nexport default InfiniteViewer;\n"],"names":["injector","styled","CLASS_NAME","className","OPTIONS","PROPERTIES","OPTION_TYPES","margin","Number","threshold","zoom","scrollArea","Object","rangeX","Array","rangeY","EVENTS","METHODS","measureSpeed","e","deltaX","deltaY","datas","time","Date","now","prevSpeed","speed","dt","getDuration","a","normalSpeed","Math","sqrt","abs","getDestPos","duration","__extends","container","viewport","options","_super","_this","scrollLeft","scrollTop","_a","loopX","loopY","endThreshold","nextLoopX","nextLoopY","nextScrollLeft","nextScrollTop","isChangeScroll","isChangeLoop","render","trigger","move","Infinity","init","off","dragger","unset","injectResult","destroy","removeEvent","onScroll","isAbsolute","offsetY","offsetX","offsetWidth","offsetHeight","scrollTo","getScrollLeft","getScrollTop","floor","addClass","document","createElement","style","cssText","insertBefore","firstChild","inject","Dragger","body","events","dragstart","inputEvent","preventDefault","pauseAnimation","drag","scrollBy","dragend","startAnimation","addEvent","size","nextOffsetX","nextOffsetY","transform","easing","x","pow","destPos","startTime","prevTime","next","t","ratio","prevRatio","timer","requestAnimationFrame","cancelAnimationFrame","InfiniteViewer","Properties","prototype","property","attributes","enumerable","configurable","get","setter","camelize","set","value","defineProperty","Component"],"mappings":"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"}