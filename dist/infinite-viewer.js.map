{"version":3,"file":"infinite-viewer.js","sources":["../src/consts.ts","../src/utils.ts","../src/InfiniteViewer.tsx","../src/index.umd.ts"],"sourcesContent":["import styled from \"css-styled\";\nimport { InfiniteViewerOptions } from \"./types\";\n\nexport const injector = styled(`\n{\n    position: relative;\n    display: block;\n    overflow: auto;\n}\n:host::-webkit-scrollbar {\n    display: none;\n}\n`);\n\n/**\n * @memberof InfiniteViewer\n */\nexport const CLASS_NAME = injector.className;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const PROPERTIES = [\n    \"margin\",\n    \"threshold\",\n    \"zoom\",\n    \"rangeX\",\n    \"rangeY\",\n    \"usePinch\",\n    \"pinchThreshold\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const OPTIONS = [\n    // ignore target, container,\n    ...PROPERTIES,\n    \"cspNonce\",\n    \"scrollArea\",\n] as const;\n\nexport const OPTION_TYPES: { [key in keyof InfiniteViewerOptions]: any } = {\n    margin: Number,\n    threshold: Number,\n    zoom: Number,\n    scrollArea: Object,\n    rangeX: Array,\n    rangeY: Array,\n    pinchThreshold: Number,\n    usePinch: Boolean,\n    cspNonce: String,\n};\n\n/**\n * @memberof InfiniteViewer\n */\nexport const EVENTS = [\n    \"scroll\",\n    \"abortPinch\",\n    \"dragStart\",\n    \"dragEnd\",\n    \"pinch\",\n] as const;\n\n/**\n * @memberof InfiniteViewer\n */\nexport const METHODS = [\n    \"getScrollLeft\",\n    \"getScrollTop\",\n    \"getScrollWidth\",\n    \"getScrollHeight\",\n    \"scrollTo\",\n    \"scrollBy\",\n    \"scrollCenter\",\n    \"getContainer\",\n    \"getViewport\",\n] as const;\n","import { OnDrag } from \"@daybrush/drag\";\n\nexport function measureSpeed(e: OnDrag) {\n    const { deltaX, deltaY, datas } = e;\n    const time = Date.now();\n    const prevSpeed = datas.speed;\n\n    if (!prevSpeed) {\n        datas.speed = [0, 0];\n        datas.time = time;\n        return;\n    }\n    const dt = time - datas.time;\n    datas.speed = [prevSpeed[0] / 2 + deltaX / dt, prevSpeed[1] / 2 + deltaY / dt];\n}\n\nexport function getDuration(speed: number[], a: number) {\n    const normalSpeed = Math.sqrt(speed[0] * speed[0] + speed[1] * speed[1]);\n\n    return Math.abs(normalSpeed / a);\n}\nexport function getDestPos(speed: number[], a: number) {\n    const duration = getDuration(speed, a);\n\n    return [\n        speed[0] / 2 * duration,\n        speed[1] / 2 * duration,\n    ];\n}\nexport function minmax(value: number, min: number, max: number) {\n    return Math.min(max, Math.max(min, value));\n}\n","import Component from \"@egjs/component\";\nimport Dragger from \"@daybrush/drag\";\nimport { InjectResult } from \"css-styled\";\nimport { Properties } from \"framework-utils\";\nimport { camelize, IObject, addEvent, removeEvent, addClass } from \"@daybrush/utils\";\nimport { InfiniteViewerOptions, InfiniteViewerProperties, InfiniteViewerEvents } from \"./types\";\nimport { PROPERTIES, injector, CLASS_NAME } from \"./consts\";\nimport { measureSpeed, getDuration, getDestPos, minmax } from \"./utils\";\n\n@Properties(PROPERTIES as any, (prototype, property) => {\n    const attributes: IObject<any> = {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this.options[property];\n        },\n    };\n    const setter = camelize(`set ${property}`);\n    if (prototype[setter]) {\n        attributes.set = function(value) {\n            this[setter](value);\n        };\n    } else {\n        attributes.set = function(value) {\n            this.options[property] = value;\n        };\n    }\n    Object.defineProperty(prototype, property, attributes);\n})\n/**\n * @sort 1\n */\nclass InfiniteViewer extends Component {\n    public options: InfiniteViewerOptions;\n    private injectResult!: InjectResult;\n    private scrollArea!: HTMLElement;\n    private dragger!: Dragger;\n    private loopX = 0;\n    private loopY = 0;\n    private offsetX = 0;\n    private offsetY = 0;\n    private scrollLeft = 0;\n    private scrollTop = 0;\n    private timer = 0;\n    private dragFlag = false;\n    /**\n     * @sort 1\n     */\n    constructor(\n        private container: HTMLElement,\n        private viewport: HTMLElement,\n        options: Partial<InfiniteViewerOptions> = {},\n    ) {\n        super();\n        this.options = {\n            margin: 500,\n            threshold: 100,\n            zoom: 1,\n            rangeX: [-Infinity, Infinity],\n            rangeY: [-Infinity, Infinity],\n            scrollArea: null,\n            usePinch: false,\n            pinchThreshold: 30,\n            cspNonce: \"\",\n            ...options,\n        };\n        this.scrollArea = this.options.scrollArea;\n        this.init();\n    }\n    /**\n     * Get Container Element\n     */\n    public getContainer(): HTMLElement {\n        return this.container;\n    }\n    /**\n     * Get Viewport Element\n     */\n    public getViewport(): HTMLElement {\n        return this.viewport;\n    }\n    /**\n     * Destroy elements, properties, and events.\n     */\n    public destroy(): void {\n        this.off();\n        this.dragger.unset();\n        this.injectResult.destroy();\n        removeEvent(this.container, \"scroll\", this.onScroll);\n\n        this.dragger = null;\n        this.injectResult = null;\n        this.container = null;\n        this.options = null;\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     * @param - Get absolute top position\n     */\n    public getScrollTop(isAbsolute?: boolean) {\n        return (this.scrollTop + (this.loopY - 1) * this.margin - this.offsetY\n            + (isAbsolute ? (-this.rangeY[0] + 1) * this.margin : 0)) / this.zoom;\n    }\n    /**\n     * Gets the number of pixels that an element's content is scrolled vertically.\n     * @param - Get absolute left position\n     */\n    public getScrollLeft(isAbsolute?: boolean) {\n        return (this.scrollLeft + (this.loopX - 1) * this.margin - this.offsetX\n            + (isAbsolute ? (-this.rangeX[0] + 1) * this.margin : 0)) / this.zoom;\n    }\n    /**\n     * Gets measurement of the width of an element's content with overflow\n     */\n    public getScrollWidth() {\n        return this.container.offsetWidth + this.margin * (this.rangeX[1] - this.rangeX[0] + 2);\n    }\n    /**\n     * Gets measurement of the height of an element's content with overflow\n     */\n    public getScrollHeight() {\n        return this.container.offsetHeight + this.margin * (this.rangeY[1] - this.rangeY[0] + 2);\n    }\n\n    /**\n     * Scroll the element to the center\n     */\n    public scrollCenter() {\n        const {\n            offsetWidth: containerWidth,\n            offsetHeight: containerHeight,\n        } = this.container;\n        const {\n            offsetWidth: viewportWidth,\n            offsetHeight: viewportHeight,\n        } = this.viewport;\n        const zoom = this.zoom;\n        const left = -(containerWidth - viewportWidth * zoom) / 2;\n        const top = -(containerHeight - viewportHeight * zoom) / 2;\n\n        return this.scrollTo(left, top);\n    }\n    /**\n     * Scrolls the container by the given amount.\n     * @param deltaX\n     * @param deltaY\n     */\n    public scrollBy(deltaX: number, deltaY: number) {\n        const zoom = this.zoom;\n        return this.scrollTo(this.getScrollLeft() * zoom + deltaX, this.getScrollTop() * zoom + deltaY);\n    }\n    /**\n     * Scrolls the container to set of coordinates.\n     * @param scrollLeft\n     * @param scrollTop\n     */\n    public scrollTo(scrollLeft: number, scrollTop: number) {\n        const {\n            rangeX = [0, 0],\n            rangeY = [0, 0],\n            margin = 0,\n        } = this;\n\n        this.loopX = minmax(Math.floor((margin + scrollLeft) / margin), rangeX[0], rangeX[1]);\n        this.loopY = minmax(Math.floor((margin + scrollTop) / margin), rangeY[0], rangeY[1]);\n        this.offsetX = (this.loopX - 1) * margin - scrollLeft + this.scrollLeft;\n        this.offsetY = (this.loopY - 1) * margin - scrollTop + this.scrollTop;\n\n        this.render();\n        /**\n         * The `scroll` event fires when the document view or an element has been scrolled.\n         * @memberof InfiniteViewer\n         * @event scroll\n         * @param {InfiniteViewer.OnScroll} - Parameters for the scroll event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"scroll\", () => {\n         *   console.log(viewer.getScrollLeft(), viewer.getScrollTop());\n         * });\n         */\n        this.trigger(\"scroll\", {\n            scrollLeft: this.getScrollLeft(),\n            scrollTop: this.getScrollTop(),\n        });\n        return this;\n    }\n    public setZoom(zoom: number) {\n        const viewport = this.viewport;\n        const offsetWidth = viewport.offsetWidth;\n        const offsetHeight = viewport.offsetHeight;\n        const offsetZoom = (zoom - this.zoom);\n\n        this.options.zoom = zoom;\n\n        this.scrollBy(offsetWidth * offsetZoom / 2, offsetHeight * offsetZoom / 2);\n        this.render();\n    }\n    private init() {\n        // infinite-viewer(container)\n        // viewport\n        // children\n        const container = this.container;\n\n        addClass(container, CLASS_NAME);\n\n        // vanilla\n        if (!this.scrollArea) {\n            this.scrollArea = document.createElement(\"div\");\n\n            const scrollArea = this.scrollArea;\n\n            scrollArea.style.cssText += `position:absolute;top:0;left:0;`;\n            container.insertBefore(scrollArea, container.firstChild);\n        }\n        this.injectResult = injector.inject(container, {\n            nonce: this.options.cspNonce,\n        });\n        /**\n         * the `dragStart` event fires when `touchstart` does occur.\n         * @memberof InfiniteViewer\n         * @event dragStart\n         * @param {InfiniteViewer.OnDragStart} - Parameters for the `dragStart` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragStart\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `drag` event fires when `touch` does occur.\n         * @memberof InfiniteViewer\n         * @event drag\n         * @param {InfiniteViewer.OnDrag} - Parameters for the `drag` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"drag\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `dragEnd` event fires when `touchend` does occur.\n         * @memberof InfiniteViewer\n         * @event dragEnd\n         * @param {InfiniteViewer.OnDragEnd} - Parameters for the `dragEnd` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         * ).on(\"dragEnd\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `abortPinch` event fires when `pinch` event does not occur by dragging a certain area.\n         * @memberof InfiniteViewer\n         * @event abortPinch\n         * @param {InfiniteViewer.OnAbortPinch} - Parameters for the abortPinch event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"abortPinch\", e => {\n         *   console.log(e.inputEvent);\n         * });\n         */\n        /**\n         * the `pinch` event fires when two points pinch the viewer\n         * @memberof InfiniteViewer\n         * @event pinch\n         * @param {InfiniteViewer.OnPinch} - Parameters for the `pinch` event\n         * @example\n         * import InfiniteViewer from \"infinite-viewer\";\n         *\n         * const viewer = new InfiniteViewer(\n         *   document.querySelector(\".container\"),\n         *   document.querySelector(\".viewport\"),\n         *   {\n         *     usePinch: true,\n         *   }\n         * ).on(\"pinch\", e => {\n         *   console.log(e.zoom, e.inputEvent);\n         * });\n         */\n        this.dragger = new Dragger(container, {\n            container: document.body,\n            events: [\"touch\"],\n            dragstart: ({ inputEvent, datas }) => {\n                inputEvent.preventDefault();\n                this.pauseAnimation();\n                this.dragFlag = false;\n\n                datas.startEvent = inputEvent;\n                return this.trigger(\"dragStart\", {\n                    inputEvent,\n                });\n            },\n            drag: e => {\n                const options = this.options;\n                if (!options.usePinch || e.isPinch) {\n                    this.trigger(\"drag\", {\n                        inputEvent: e.inputEvent,\n                    });\n                    measureSpeed(e);\n                    this.scrollBy(-e.deltaX, -e.deltaY);\n                } else if (!this.dragFlag && e.movement > options.pinchThreshold) {\n                    this.dragFlag = true;\n\n                    this.trigger(\"abortPinch\", {\n                        inputEvent: e.datas.startEvent || e.inputEvent,\n                    });\n                }\n            },\n            dragend: e => {\n                this.trigger(\"dragEnd\", {\n                    isDrag: e.isDrag,\n                    isDouble: e.isDouble,\n                    inputEvent: e.inputEvent,\n                });\n                this.startAnimation(e.datas.speed);\n            },\n            pinchstart: ({ inputEvent, datas }) => {\n                inputEvent.preventDefault();\n                this.pauseAnimation();\n                datas.startZoom = this.zoom;\n            },\n            pinch: e => {\n                // e.distance;\n                // e.scale\n                this.trigger(\"pinch\", {\n                    distance: e.distance,\n                    scale: e.scale,\n                    zoom: e.datas.startZoom * e.scale,\n                    inputEvent: e.inputEvent,\n                });\n            },\n        });\n        const margin = this.margin;\n\n        addEvent(container, \"scroll\", this.onScroll);\n        this.render();\n        this.move(margin, margin);\n    }\n    private render() {\n        const {\n            margin = 0,\n            loopX,\n            loopY,\n            offsetX,\n            offsetY,\n            zoom = 1,\n        } = this;\n        const size = `calc(100% + ${margin * 2}px)`;\n        const nextOffsetX = (1 - loopX) * margin + offsetX;\n        const nextOffsetY = (1 - loopY) * margin + offsetY;\n\n        this.scrollArea.style.cssText += `position:absolute;top:0;left:0;width:${size};height:${size};`;\n        this.viewport.style.cssText += `transform-origin: 0 0;transform:translate(${nextOffsetX}px, ${nextOffsetY}px) scale(${zoom});`;\n    }\n    private move(scrollLeft: number, scrollTop: number) {\n        const container = this.container;\n\n        container.scrollLeft = scrollLeft;\n        container.scrollTop = scrollTop;\n    }\n    private onScroll = () => {\n        const container = this.container;\n        const { scrollLeft, scrollTop } = container;\n        const {\n            margin = 0,\n            threshold = 0,\n            loopX,\n            loopY,\n            rangeX = [0, 0],\n            rangeY = [0, 0],\n        } = this;\n        const endThreshold = margin * 2 - threshold;\n        let nextLoopX = loopX;\n        let nextLoopY = loopY;\n\n        let nextScrollLeft = scrollLeft;\n        let nextScrollTop = scrollTop;\n\n        if (scrollLeft < threshold) {\n            if (nextLoopX > rangeX[0]) {\n                nextScrollLeft = scrollLeft + margin;\n                --nextLoopX;\n            }\n        } else if (scrollLeft > endThreshold) {\n            if (nextLoopX < rangeX[1]) {\n                nextScrollLeft = scrollLeft - margin;\n                ++nextLoopX;\n            }\n        }\n        if (scrollTop < threshold) {\n            if (nextLoopY > rangeY[0]) {\n                nextScrollTop = scrollTop + margin;\n                --nextLoopY;\n            }\n        } else if (scrollTop > endThreshold) {\n            if (nextLoopY < rangeY[1]) {\n                nextScrollTop = scrollTop - margin;\n                ++nextLoopY;\n            }\n        }\n        const isChangeScroll = this.scrollLeft !== nextScrollLeft || this.scrollTop !== nextScrollTop;\n        const isChangeLoop = loopX !== nextLoopX || loopY !== nextLoopY;\n\n        this.scrollLeft = nextScrollLeft;\n        this.scrollTop = nextScrollTop;\n        this.loopX = nextLoopX;\n        this.loopY = nextLoopY;\n\n        this.render();\n\n        if (isChangeLoop || isChangeScroll) {\n            this.trigger(\"scroll\", {\n                scrollLeft: this.getScrollLeft(),\n                scrollTop: this.getScrollTop(),\n            });\n        }\n\n        if (isChangeScroll) {\n            this.move(nextScrollLeft, nextScrollTop);\n        }\n    }\n    private startAnimation(speed: number[]) {\n        if (!speed || (!speed[0] && !speed[1])) {\n            return;\n        }\n        const a = -0.0006;\n        const easing = x => 1 - Math.pow(1 - x, 3);\n        const duration = getDuration(speed, a);\n        const destPos = getDestPos(speed, a);\n        const startTime = Date.now();\n        let prevTime = startTime;\n\n        const next = () => {\n            const now = Date.now();\n            let t = now - startTime;\n\n            if (duration < t) {\n                t = duration;\n            }\n            const ratio = easing(t / duration);\n            const prevRatio = easing((prevTime - startTime) / duration);\n\n            prevTime = now;\n\n            this.scrollBy(\n                -destPos[0] * (ratio - prevRatio),\n                -destPos[1] * (ratio - prevRatio),\n            );\n\n            if (t >= duration) {\n                return;\n            }\n            this.timer = requestAnimationFrame(next);\n        };\n        this.timer = requestAnimationFrame(next);\n    }\n    private pauseAnimation() {\n        cancelAnimationFrame(this.timer);\n    }\n}\n\ninterface InfiniteViewer extends Component, InfiniteViewerProperties {\n    // tslint:disable-next-line: max-line-length\n    on<T extends keyof InfiniteViewerEvents>(eventName: T, handlerToAttach: (event: InfiniteViewerEvents[T]) => any): this;\n    on(eventName: string, handlerToAttach: (event: { [key: string]: any }) => any): this;\n    on(events: { [key: string]: (event: { [key: string]: any }) => any }): this;\n}\n\nexport default InfiniteViewer;\n","import InfiniteViewer, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (InfiniteViewer as any)[name] = modules[name];\n}\n\nexport default InfiniteViewer;\n"],"names":["injector","styled","CLASS_NAME","className","PROPERTIES","OPTIONS","__spreadArrays","OPTION_TYPES","margin","Number","threshold","zoom","scrollArea","Object","rangeX","Array","rangeY","pinchThreshold","usePinch","Boolean","cspNonce","String","EVENTS","METHODS","measureSpeed","e","deltaX","deltaY","datas","time","Date","now","prevSpeed","speed","dt","getDuration","a","normalSpeed","Math","sqrt","abs","getDestPos","duration","minmax","value","min","max","__extends","container","viewport","options","_super","_this","scrollLeft","scrollTop","_a","_b","_c","loopX","loopY","_d","_e","endThreshold","nextLoopX","nextLoopY","nextScrollLeft","nextScrollTop","isChangeScroll","isChangeLoop","render","trigger","getScrollLeft","getScrollTop","move","Infinity","init","off","dragger","unset","injectResult","destroy","removeEvent","onScroll","isAbsolute","offsetY","offsetX","offsetWidth","offsetHeight","containerWidth","containerHeight","viewportWidth","viewportHeight","left","top","scrollTo","floor","offsetZoom","scrollBy","addClass","document","createElement","style","cssText","insertBefore","firstChild","inject","nonce","Dragger","body","events","dragstart","inputEvent","preventDefault","pauseAnimation","dragFlag","startEvent","drag","isPinch","movement","dragend","isDrag","isDouble","startAnimation","pinchstart","startZoom","pinch","distance","scale","addEvent","size","nextOffsetX","nextOffsetY","easing","x","pow","destPos","startTime","prevTime","next","t","ratio","prevRatio","timer","requestAnimationFrame","cancelAnimationFrame","InfiniteViewer","Properties","prototype","property","attributes","enumerable","configurable","get","setter","camelize","set","defineProperty","Component","name","modules"],"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"}